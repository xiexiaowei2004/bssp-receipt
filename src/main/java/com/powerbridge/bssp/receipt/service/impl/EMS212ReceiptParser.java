package com.powerbridge.bssp.receipt.service.impl;import com.powerbridge.bssp.receipt.util.PostActionEnum;import org.springframework.stereotype.Component;/** * 项目名称：bssp Maven Webapp * 类名称：EMS212ReceiptParser * 类描述：账册单耗质疑/磋商/磋商记录回执 * 创建人：willChen * 创建时间：2017/6/27 17:59 * * @version 1.0 */@Component("EMS212")public class EMS212ReceiptParser extends AbstractReceiptParser {    public EMS212ReceiptParser() {    }    @Override    public PostActionEnum postAction() throws Exception {//        //手动切换数据源并处理事务//        TransactionStatus status = transactionManagerStatus(DBTypeEnum.ems);//        try {//            //更新表头回执状态//            bscService.updateById(bscBeanObject);//            //回执状态为成功时才修改正式表数据//            if (result.equals("1")) {//                //保存账册单耗质疑磋商通知书基本数据//                saveBsc();//                //保存账册单耗质疑磋商通知书明细//                saveDt();//            }//            transactionManager.commit(status);//        } catch (Exception e) {//            transactionManager.rollback(status);//            e.printStackTrace();//            throw new Exception(e);//        }        return PostActionEnum.SUCCESS_1;    }    /**     * 保存正式表数据     *     * @throws Exception     */    public void saveBsc() throws Exception {//        //把xml中的值添加到对象中//        getEdiXmlInfoMap(bscBeanObject, emsPutrecBscElement);//        //更新本地表头数据//        bscService.updateById(bscBeanObject);//        //更新本地正式表表头数据//        EmsCusBsc emsCusBsc = new EmsCusBsc();//        //对象属性复制//        BeanUtilsEx.copyProperties(emsCusBsc, bscBeanObject);//        //根据变更次数判断是对正式表的操作//        if (chgTmsCnt == 0) {//            emsCusBsc.setUid(UUIDGenerator.getUUID());//            //emsCusBscService.insert(emsCusBsc);//        } else {//            emsCusBsc.setUid(null);//            EntityWrapper cusEntityWrapper = new EntityWrapper();//            cusEntityWrapper.eq("SEQ_NO", seqNo);//            //emsCusBscService.update(emsCusBsc, cusEntityWrapper);//        }    }    /**     * 保存正式成品料件表数据     *     * @throws Exception     */    public void saveDt() throws Exception {//        //处理表体数据//        List<Element> elementList = getElementList("//");//        if (elementList != null) {//            for (Element dtElement : elementList) {//                //料件成品类型代码 E：成品 I：料件//                String mtpckEndprdTypecd = dtElement.elementText("mtpckEndprdTypecd");//                //根据不同类型代码编辑不同数据//                Object arcrpBeanObject = mtpckEndprdTypecd.equals("E") ? new EmsPutrecExg() : new EmsPutrecImg();//                //IService service = mtpckEndprdTypecd.equals("E") ? emsCusExgService : emsCusImgService;//                //先把数据存到预录入对象中//                getEdiXmlInfoMap(arcrpBeanObject, dtElement);//                //对象属性复制//                Object cusBeanObject = mtpckEndprdTypecd.equals("E") ? new EmsCusExg() : new EmsCusImg();//                //对象属性复制//                BeanUtilsEx.copyProperties(cusBeanObject, arcrpBeanObject);////                //修改标记代码 0:未修改 1：修改 2：删除 3：新增//                String modfMarkcd = dtElement.elementText("modfMarkcd");//                if (modfMarkcd.equals("1") || modfMarkcd.equals("2")) {//                    EntityWrapper cusEntityWrapper = new EntityWrapper();//                    cusEntityWrapper.eq("SEQ_NO", seqNo);//                    cusEntityWrapper.eq("GDS_SEQNO", BeanUtils.getProperty(cusBeanObject, "gdsSeqno"));//                    //service.update(cusBeanObject, cusEntityWrapper);//                } else if (modfMarkcd.equals("3")) {//                    BeanUtil.setProperty(cusBeanObject, "uid", UUIDGenerator.getUUID());//                    BeanUtil.setProperty(cusBeanObject, "seqNo", seqNo);//                    //service.insert(cusBeanObject);//                }//            }//        }    }}